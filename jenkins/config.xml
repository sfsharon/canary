<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1282.ve6d865025906">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>Running Canary testing framework</description>
  <displayName>Canary UT</displayName>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.TimerTrigger>
          <spec>0 2 * * *</spec>
        </hudson.triggers.TimerTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3624.v43b_a_38b_62b_b_7">
    <script>pipeline {
    agent any
    
    stages {
        stage(&apos;Prepare DUT&apos;) {
            steps {
                dir(&apos;/home/sharonf/workspace/canary/dut_ctrl&apos;) {
                    //sh &apos;python3 -m pytest --maxfail=1 --log-cli-level INFO -v test_init.py&apos;
                    //sh &apos;python3 -m pytest --log-cli-level INFO -v test_init.py  -k test_init_TC01_installing_build_and_reboot&apos;
                   sh &apos;echo Mock Installing Build and Reboot&apos;
                }
            }
        }
        
        stage(&apos;ACL Suite - TC00_Setup_Environment&apos;) {
            steps {
                dir(&apos;/home/sharonf/workspace/canary/dut_ctrl&apos;) {
                    sh &apos;python3 -m pytest --log-cli-level INFO -v test_suite_acl.py  -k test_TC00_Setup_Environment&apos;
                }
            }
        }

        stage(&apos;ACL Suite - TC01_rule_r1_deny_acl_in&apos;) {
            steps {
                dir(&apos;/home/sharonf/workspace/canary/dut_ctrl&apos;) {
                    sh &apos;python3 -m pytest --log-cli-level INFO -v test_suite_acl.py  -k test_TC01_rule_r1_deny_acl_in&apos;
                }
            }
        }        

        stage(&apos;ACL Suite - TC02_default_rule_permit_acl_in&apos;) {
            steps {
                dir(&apos;/home/sharonf/workspace/canary/dut_ctrl&apos;) {
                    sh &apos;python3 -m pytest --log-cli-level INFO -v test_suite_acl.py  -k test_TC02_default_rule_permit_acl_in&apos;
                }
            }
        }

        stage(&apos;ACL Suite - TC03_acl_rule_r1_deny_ctrl_plane_egress&apos;) {
            steps {
                dir(&apos;/home/sharonf/workspace/canary/dut_ctrl&apos;) {
                    sh &apos;python3 -m pytest --log-cli-level INFO -v test_suite_acl.py  -k test_TC03_acl_rule_r1_deny_ctrl_plane_egress&apos;
                }
            }
        }

        stage(&apos;ACL Suite - TC04_acl_rule_default_permit_ctrl_plane_egress&apos;) {
            steps {
                dir(&apos;/home/sharonf/workspace/canary/dut_ctrl&apos;) {
                    sh &apos;python3 -m pytest --log-cli-level INFO -v test_suite_acl.py  -k test_TC04_acl_rule_default_permit_ctrl_plane_egress&apos;
                }
            }
        }
        
        stage(&apos;ACL Suite - TC05_acl_rule_default_deny_ctrl_plane_egress&apos;) {
            steps {
                dir(&apos;/home/sharonf/workspace/canary/dut_ctrl&apos;) {
                    sh &apos;python3 -m pytest --log-cli-level INFO -v test_suite_acl.py  -k test_TC05_acl_rule_default_deny_ctrl_plane_egress&apos;
                }
            }
        }

        stage(&apos;ACL Suite - TC06_acl_rule_r1_deny_ctrl_plane_nni_ingress&apos;) {
            steps {
                dir(&apos;/home/sharonf/workspace/canary/dut_ctrl&apos;) {
                    sh &apos;python3 -m pytest --log-cli-level INFO -v test_suite_acl.py  -k test_TC06_acl_rule_r1_deny_ctrl_plane_nni_ingress&apos;
                }
            }
        }        
    } // stages
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>